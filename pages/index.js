import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import Header from "./Header";
import ChatLog from "./ChatLog";
import ChatInput from "./ChatInput";
import { useState, useRef } from "react";

export default function Home() {
  const [input, setInput] = useState("");
  const [chatLog, setChatLog] = useState([
    {
      user: "gbt",
      message: "How can I help you today?",
    },
    {
      user: "me",
      message: "I want to use chatGBT!",
    },
    {
      user: "gbt",
      message: "How can I help you today?",
    },
    {
      user: "me",
      message: "I want to use chatGBT!",
    },
    {
      user: "gbt",
      message: "How can I help you today?",
    },
  ]);

  function clearChat() {
    setChatLog([]);
  }

  async function handleSubmit(e) {
    e.preventDefault();
    console.log("submit");
    let chatLogNew = [...chatLog, { user: "me", message: `${input}` }];
    await setInput("");
    const messages = chatLogNew.map((message) => message.message).join("\n");
    const response = await fetch("http://localhost:3080/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        message: messages,
      }),
    });
    const data = await response.json();
    await setChatLog([
      ...chatLogNew,
      { user: "gbt", message: `${data.message}` },
    ]);
    console.log(data.message);
  }

  return (
    <>
      <Head>
        <title>Beep Boop</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="body bg-[#343542] w-screen min-h-screen">
        {/* Header */}
        <div className="headerContainer h-10 w-screen bg-[#343542] border-b-2 border-[#5F646C] flex justify-between p-2 fixed top-0 z-10">
          <div className="headerIconTwo">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={1.5}
              stroke="currentColor"
              className="w-6 h-6"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M3.75 5.25h16.5m-16.5 4.5h16.5m-16.5 4.5h16.5m-16.5 4.5h16.5"
              />
            </svg>
          </div>
          <div className="headerText">
            <h1>Beep Boop Chat</h1>
          </div>
          <div className="headerIconTwo">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={1.5}
              stroke="currentColor"
              className="w-6 h-6"
              onClick={clearChat}
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M13.5 16.875h3.375m0 0h3.375m-3.375 0V13.5m0 3.375v3.375M6 10.5h2.25a2.25 2.25 0 002.25-2.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v2.25A2.25 2.25 0 006 10.5zm0 9.75h2.25A2.25 2.25 0 0010.5 18v-2.25a2.25 2.25 0 00-2.25-2.25H6a2.25 2.25 0 00-2.25 2.25V18A2.25 2.25 0 006 20.25zm9.75-9.75H18a2.25 2.25 0 002.25-2.25V6A2.25 2.25 0 0018 3.75h-2.25A2.25 2.25 0 0013.5 6v2.25a2.25 2.25 0 002.25 2.25z"
              />
            </svg>
          </div>
        </div>
        {/* ChatLog */}
        <div className="w-screen flex flex-col space-y-2 p-2 mt-10 mb-10">
          {chatLog.map((message, index) => (
            <ChatMessage key={index} message={message} />
          ))}
        </div>
        {/* ChatInput */}
        <div className="chatInputContainer h-20 w-screen border-t-2 bg-[#343542] border-[#5F646C] flex justify-center fixed bottom-0 z-10">
          <div className="flex mt-5 mr-5 ml-5 w-full h-fit justify-center">
            <form className="w-full" onSubmit={handleSubmit}>
              <input
                className="h-10 w-full appearance-none rounded p-2 text-white bg-[#40414f] outline-none"
                id="username"
                type="text"
                placeholder="Ask me a something"
                autoComplete="off"
                rows="1"
                value={input}
                onChange={(e) => setInput(e.target.value)}
              />
            </form>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={1.5}
              stroke="currentColor"
              className="w-9 h-9 ml-2"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M8.625 9.75a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.184-4.183a1.14 1.14 0 01.778-.332 48.294 48.294 0 005.83-.498c1.585-.233 2.708-1.626 2.708-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
              />
            </svg>
          </div>
        </div>
        <br />
        <br />
      </div>
    </>
  );
}

const ChatMessage = ({ message }) => {
  return (
    <div
      className={message.user === "gbt" ? "chat-box-left" : "chat-box-right"}
    >
      <div className={message.user === "gbt" ? "pl-4" : "pr-4"}>
        {message.message}
      </div>
    </div>
  );
};
